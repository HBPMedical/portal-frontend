{
  "uuid": "4ea103db-e4ff-4a98-8b17-29c8cdbe5501",
  "name": "naiveBayes",
  "createdBy": {
    "username": "manu",
    "fullname": "Manuel Spuhler",
    "firstname": "Manuel",
    "lastname": "Spuhler",
    "picture": "images/users/default_user.png",
    "email": "guy.spuhler@chuv.ch",
    "languages": [],
    "roles": [],
    "agreeNDA": true,
    "appsVotes": []
  },
  "model": {
    "slug": "classification1",
    "title": "classification1",
    "valid": true,
    "createdAt": "Oct 26, 2018 1:37:17 PM",
    "query": {
      "id": 1704,
      "variables": [{ "code": "alzheimerbroadcategory" }],
      "covariables": [{ "code": "lefthippocampus" }],
      "grouping": [],
      "trainingDatasets": [
        { "code": "clm" },
        { "code": "adni" },
        { "code": "fbf" }
      ],
      "testingDatasets": [],
      "validationDatasets": [
        { "code": "edsd" },
        { "code": "ppmi" },
        { "code": "chru_lille" }
      ],
      "filters": ""
    },
    "dataset": {
      "code": "DS1540825503020",
      "header": [],
      "grouping": [],
      "variable": []
    },
    "config": {
      "id": 1694,
      "yAxisVariables": [],
      "title": { "text": "classification1" }
    },
    "createdBy": {
      "username": "manu",
      "fullname": "Manuel Spuhler",
      "firstname": "Manuel",
      "lastname": "Spuhler",
      "picture": "images/users/default_user.png",
      "email": "guy.spuhler@chuv.ch",
      "languages": [],
      "roles": [],
      "agreeNDA": true,
      "appsVotes": []
    }
  },
  "created": "Feb 11, 2019 9:23:23 AM",
  "finished": "Feb 11, 2019 9:23:40 AM",
  "hasError": false,
  "hasServerError": false,
  "shared": false,
  "resultsViewed": true,
  "algorithms": [
    {
      "validation": true,
      "code": "naiveBayes",
      "name": "naiveBayes",
      "parameters": [
        { "code": "alpha", "value": "1" },
        { "code": "class_prior", "value": "" }
      ]
    }
  ],
  "validations": [
    {
      "code": "kfold",
      "name": "validation",
      "parameters": [{ "code": "k", "value": "2" }]
    }
  ],
  "result": [
    {
      "timestamp": 1549877015,
      "data": [
        {
          "timestamp": 1549877007,
          "data": {
            "cells": {
              "classes": {
                "shared": false,
                "@": "PrettyPFA line 18",
                "rollback": false,
                "type": { "type": "array", "items": "string" },
                "init": ["AD", "CN", "MCI", "Other"]
              },
              "validations": {
                "type": { "type": "array", "items": "Record" },
                "init": [
                  {
                    "code": "kfold",
                    "validationSpec": {
                      "code": "kfold",
                      "parameters": [{ "code": "k", "value": "2" }]
                    },
                    "node": "QA Node2 - CHUV CLM",
                    "data": {
                      "average": {
                        "Weighted precision": 0.14770436457493843,
                        "Weighted F1-score": 0.15670150855608667,
                        "Confusion matrix": {
                          "labels": ["AD", "CN", "Other", "MCI"],
                          "values": [
                            [120.0, 0.0, 5.0, 297.0],
                            [16.0, 0.0, 34.0, 401.0],
                            [30.0, 0.0, 1.0, 1059.0],
                            [77.0, 0.0, 38.0, 573.0]
                          ]
                        },
                        "Accuracy": 0.26178800452659373,
                        "type": "PolynomialClassificationScore",
                        "Weighted false positive rate": 0.2613556384147145,
                        "Weighted recall": 0.26178800452659373
                      },
                      "folds": {
                        "0": {
                          "Weighted precision": 0.35743977378647834,
                          "Weighted F1-score": 0.38421062144166274,
                          "Confusion matrix": {
                            "labels": ["AD", "CN", "Other", "MCI"],
                            "values": [
                              [97.0, 0.0, 0.0, 219.0],
                              [16.0, 0.0, 0.0, 324.0],
                              [0.0, 0.0, 0.0, 0.0],
                              [75.0, 0.0, 0.0, 519.0]
                            ]
                          },
                          "Accuracy": 0.4645550527903469,
                          "type": "PolynomialClassificationScore",
                          "Weighted false positive rate": 0.3947482923169404,
                          "Weighted recall": 0.4645550527903469
                        },
                        "1": {
                          "Weighted precision": 0.4453127573575166,
                          "Weighted F1-score": 0.027509179732546445,
                          "Confusion matrix": {
                            "labels": ["AD", "CN", "Other", "MCI"],
                            "values": [
                              [23.0, 0.0, 1.0, 78.0],
                              [0.0, 0.0, 0.0, 77.0],
                              [30.0, 0.0, 1.0, 1059.0],
                              [2.0, 0.0, 0.0, 54.0]
                            ]
                          },
                          "Accuracy": 0.05886792452830188,
                          "type": "PolynomialClassificationScore",
                          "Weighted false positive rate": 0.04594719774386362,
                          "Weighted recall": 0.05886792452830188
                        }
                      },
                      "type": "KFoldCrossValidationScore"
                    }
                  },
                  {
                    "code": "remote-validation",
                    "validationSpec": {
                      "code": "remote-validation",
                      "parameters": [{ "code": "node", "value": "localhost" }]
                    },
                    "node": "localhost",
                    "data": {
                      "Weighted precision": 0.4397626310909801,
                      "Weighted F1-score": 0.1948155301850096,
                      "Confusion matrix": {
                        "labels": ["AD", "CN", "Other", "MCI"],
                        "values": [
                          [102.0, 0.0, 2.0, 355.0],
                          [6.0, 0.0, 2.0, 430.0],
                          [33.0, 0.0, 14.0, 823.0],
                          [52.0, 0.0, 1.0, 653.0]
                        ]
                      },
                      "Accuracy": 0.3109583501819652,
                      "type": "PolynomialClassificationScore",
                      "Weighted false positive rate": 0.26927819370341133,
                      "Weighted recall": 0.3109583501819652
                    }
                  }
                ]
              },
              "multinomialModel": {
                "shared": false,
                "@": "PrettyPFA line 17",
                "rollback": false,
                "type": { "type": "array", "items": "MultinomialDistribution" },
                "init": []
              },
              "gaussModel": {
                "shared": false,
                "@": "PrettyPFA line 16",
                "rollback": false,
                "type": { "type": "array", "items": "GaussianDistribution" },
                "init": [
                  {
                    "stats": [
                      { "mean": 2.7024890338, "variance": 0.1332748164 }
                    ]
                  },
                  {
                    "stats": [{ "mean": 3.0631596, "variance": 0.0881809374 }]
                  },
                  {
                    "stats": [
                      { "mean": 2.9507798026, "variance": 0.1117518204 }
                    ]
                  },
                  {
                    "stats": [{ "mean": 2.937323617, "variance": 0.1357612265 }]
                  }
                ]
              },
              "logPrior": {
                "shared": false,
                "@": "PrettyPFA line 19",
                "rollback": false,
                "type": { "type": "array", "items": "double" },
                "init": [
                  -1.7198390834,
                  -1.6544112781,
                  -0.9414614702,
                  -1.4286046093
                ]
              }
            },
            "method": "map",
            "name": "naive_bayes",
            "fcns": {
              "arr": {
                "params": [{ "x": "double" }],
                "ret": { "type": "array", "items": "double" },
                "do": [
                  {
                    "@": "PrettyPFA line 22",
                    "type": { "type": "array", "items": "double" },
                    "new": ["x"]
                  }
                ]
              },
              "C": {
                "params": [
                  { "x": "string" },
                  { "categories": { "type": "array", "items": "string" } }
                ],
                "ret": { "type": "array", "items": "double" },
                "do": [
                  {
                    "@": "PrettyPFA line 25",
                    "a.map": [
                      "categories",
                      {
                        "params": [{ "cat": "string" }],
                        "ret": "double",
                        "do": [
                          {
                            "@": "PrettyPFA line 25",
                            "if": {
                              "@": "PrettyPFA line 25",
                              "\u003d\u003d": ["cat", "x"]
                            },
                            "then": [1],
                            "else": [0]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "standardize": {
                "params": [
                  { "x": "double" },
                  { "mu": "double" },
                  { "sigma": "double" }
                ],
                "ret": "double",
                "do": [
                  {
                    "@": "PrettyPFA line 28",
                    "/": [
                      { "@": "PrettyPFA line 28", "-": ["x", "mu"] },
                      "sigma"
                    ]
                  }
                ]
              }
            },
            "@": "PrettyPFA document",
            "metadata": {
              "estimator": "{\"py/object\": \"sklearn_to_pfa.mixed_nb.MixedNB\", \"py/state\": {\"gauss_nb\": {\"py/object\": \"sklearn.naive_bayes.GaussianNB\", \"py/state\": {\"_sklearn_version\": \"0.19.1\", \"class_count_\": {\"py/object\": \"numpy.ndarray\", \"dtype\": \"float64\", \"values\": [281.0, 300.0, 612.0, 376.0]}, \"class_prior_\": {\"py/object\": \"numpy.ndarray\", \"dtype\": \"float64\", \"values\": [0.17909496494582536, 0.19120458891013384, 0.390057361376673, 0.23964308476736776]}, \"classes_\": {\"py/object\": \"numpy.ndarray\", \"dtype\": \"\u003cU5\", \"values\": [\"AD\", \"CN\", \"MCI\", \"Other\"]}, \"priors\": null, \"sigma_\": {\"py/object\": \"numpy.ndarray\", \"dtype\": \"float64\", \"values\": [[0.13327481638900027], [0.08818093736307947], [0.11175182040348437], [0.13576122645062538]]}, \"theta_\": {\"py/object\": \"numpy.ndarray\", \"dtype\": \"float64\", \"values\": [[2.702489033807829], [3.0631596], [2.950779802614379], [2.937323617021277]]}}}, \"is_nominal\": [false], \"multi_nb\": {\"py/object\": \"sklearn.naive_bayes.MultinomialNB\", \"py/state\": {\"_sklearn_version\": \"0.19.1\", \"alpha\": 1, \"class_prior\": null, \"fit_prior\": true}}}}",
              "score": "0.4123645634",
              "X": "{\"lefthippocampus\":{\"count\":1569.0,\"mean\":2.9245750272,\"std\":0.3602060105,\"min\":0.86088,\"25%\":2.6864038,\"50%\":2.9413345,\"75%\":3.1640551,\"max\":4.4709}}",
              "y": "{\"count\":1569,\"unique\":4,\"top\":\"MCI\",\"freq\":612}"
            },
            "output": "string",
            "action": [
              {
                "@": "PrettyPFA lines 30-31",
                "let": {
                  "x": {
                    "@": "PrettyPFA lines 30-31",
                    "a.flatten": [
                      {
                        "@": "PrettyPFA lines 30-31",
                        "type": {
                          "type": "array",
                          "items": { "type": "array", "items": "double" }
                        },
                        "new": [
                          {
                            "@": "PrettyPFA line 31",
                            "u.arr": [
                              {
                                "@": "PrettyPFA line 31",
                                "cast.double": [
                                  {
                                    "@": "PrettyPFA line 31",
                                    "attr": "input",
                                    "path": [
                                      {
                                        "@": "PrettyPFA line 31",
                                        "string": "lefthippocampus"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "@": "PrettyPFA line 34",
                "let": {
                  "gaussFeatures": {
                    "@": "PrettyPFA line 34",
                    "if": {
                      "@": "PrettyPFA line 34",
                      "\u003e": [
                        {
                          "@": "PrettyPFA line 34",
                          "a.len": [
                            { "@": "PrettyPFA line 34", "cell": "gaussModel" }
                          ]
                        },
                        0
                      ]
                    },
                    "then": [
                      {
                        "@": "PrettyPFA line 34",
                        "a.len": [
                          {
                            "@": "PrettyPFA line 34",
                            "cell": "gaussModel",
                            "path": [
                              0,
                              { "@": "PrettyPFA line 34", "string": "stats" }
                            ]
                          }
                        ]
                      }
                    ],
                    "else": [0]
                  }
                }
              },
              {
                "@": "PrettyPFA lines 36-38",
                "let": {
                  "gaussianLL": {
                    "@": "PrettyPFA lines 36-38",
                    "a.map": [
                      { "@": "PrettyPFA line 36", "cell": "gaussModel" },
                      {
                        "params": [
                          {
                            "dist": {
                              "type": "record",
                              "name": "GaussianDistribution",
                              "fields": [
                                {
                                  "name": "stats",
                                  "type": {
                                    "type": "array",
                                    "items": {
                                      "type": "record",
                                      "name": "M",
                                      "fields": [
                                        { "name": "mean", "type": "double" },
                                        { "name": "variance", "type": "double" }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "ret": "double",
                        "do": [
                          {
                            "@": "PrettyPFA line 37",
                            "model.naive.gaussian": [
                              {
                                "@": "PrettyPFA line 37",
                                "a.subseq": ["x", 0, "gaussFeatures"]
                              },
                              {
                                "@": "PrettyPFA line 37",
                                "attr": "dist",
                                "path": [
                                  {
                                    "@": "PrettyPFA line 37",
                                    "string": "stats"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "@": "PrettyPFA lines 40-42",
                "let": {
                  "multinomialLL": {
                    "@": "PrettyPFA lines 40-42",
                    "a.map": [
                      { "@": "PrettyPFA line 40", "cell": "multinomialModel" },
                      {
                        "params": [
                          {
                            "dist": {
                              "type": "record",
                              "name": "MultinomialDistribution",
                              "fields": [
                                {
                                  "name": "logLikelihoods",
                                  "type": { "type": "array", "items": "double" }
                                }
                              ]
                            }
                          }
                        ],
                        "ret": "double",
                        "do": [
                          {
                            "@": "PrettyPFA line 41",
                            "model.naive.multinomial": [
                              {
                                "@": "PrettyPFA line 41",
                                "a.subseq": [
                                  "x",
                                  "gaussFeatures",
                                  { "@": "PrettyPFA line 41", "a.len": ["x"] }
                                ]
                              },
                              {
                                "@": "PrettyPFA line 41",
                                "attr": "dist",
                                "path": [
                                  {
                                    "@": "PrettyPFA line 41",
                                    "string": "logLikelihoods"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "@": "PrettyPFA line 44",
                "let": {
                  "classLL": { "@": "PrettyPFA line 44", "cell": "logPrior" }
                }
              },
              {
                "@": "PrettyPFA lines 45-46",
                "if": {
                  "@": "PrettyPFA line 45",
                  "\u003e": [
                    { "@": "PrettyPFA line 45", "a.len": ["gaussianLL"] },
                    0
                  ]
                },
                "then": [
                  {
                    "@": "PrettyPFA line 46",
                    "set": {
                      "classLL": {
                        "@": "PrettyPFA line 46",
                        "la.add": ["classLL", "gaussianLL"]
                      }
                    }
                  }
                ]
              },
              {
                "@": "PrettyPFA lines 47-48",
                "if": {
                  "@": "PrettyPFA line 47",
                  "\u003e": [
                    { "@": "PrettyPFA line 47", "a.len": ["multinomialLL"] },
                    0
                  ]
                },
                "then": [
                  {
                    "@": "PrettyPFA line 48",
                    "set": {
                      "classLL": {
                        "@": "PrettyPFA line 48",
                        "la.add": ["classLL", "multinomialLL"]
                      }
                    }
                  }
                ]
              },
              {
                "@": "PrettyPFA line 50",
                "let": {
                  "norm": {
                    "@": "PrettyPFA line 50",
                    "a.logsumexp": ["classLL"]
                  }
                }
              },
              {
                "@": "PrettyPFA line 51",
                "let": {
                  "probs": {
                    "@": "PrettyPFA line 51",
                    "a.map": [
                      "classLL",
                      {
                        "params": [{ "x": "double" }],
                        "ret": "double",
                        "do": [
                          {
                            "@": "PrettyPFA line 51",
                            "m.exp": [
                              { "@": "PrettyPFA line 51", "-": ["x", "norm"] }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "@": "PrettyPFA line 52",
                "cell": "classes",
                "path": [{ "@": "PrettyPFA line 52", "a.argmax": ["probs"] }]
              }
            ],
            "input": {
              "type": "record",
              "name": "Input",
              "fields": [{ "name": "lefthippocampus", "type": "double" }]
            }
          },
          "algorithmSpec": {
            "code": "naiveBayes",
            "parameters": [
              { "code": "alpha", "value": "1" },
              { "code": "class_prior", "value": "" }
            ],
            "step": {
              "name": "scatter",
              "execution": "map",
              "input": { "selectionType": "training", "type": "SelectDataset" },
              "operation": { "compute": "compute" }
            }
          },
          "algorithm": "python-sgd-naive-bayes",
          "jobId": "765aff4a-bb01-4b5d-a0b8-16455327a20c",
          "node": "QA Node2 - CHUV CLM",
          "type": "application/pfa+json"
        }
      ],
      "query": {
        "covariables": [{ "code": "lefthippocampus" }],
        "algorithms": [
          {
            "code": "naiveBayes",
            "parameters": [
              { "code": "alpha", "value": "1" },
              { "code": "class_prior", "value": "" }
            ],
            "step": {
              "name": "scatter",
              "execution": "map",
              "input": { "selectionType": "training", "type": "SelectDataset" },
              "operation": { "compute": "compute" }
            }
          }
        ],
        "testingDatasets": [],
        "validations": [
          { "code": "kfold", "parameters": [{ "code": "k", "value": "2" }] }
        ],
        "grouping": [],
        "variables": [{ "code": "alzheimerbroadcategory" }],
        "validationDatasets": [
          { "code": "edsd" },
          { "code": "ppmi" },
          { "code": "chru_lille" }
        ],
        "trainingDatasets": [
          { "code": "clm" },
          { "code": "adni" },
          { "code": "fbf" }
        ],
        "targetTable": "mip_local_features",
        "user": { "code": "manu" }
      },
      "jobId": "c9917d2a-5186-4194-90e5-b5abd010658d",
      "node": "QA Node2 - CHUV CLM",
      "type": "application/vnd.hbp.mip.experiment.pfa+json"
    },
    {
      "timestamp": 1549877016,
      "data": [
        {
          "timestamp": 1549877008,
          "data": {
            "cells": {
              "classes": {
                "shared": false,
                "@": "PrettyPFA line 18",
                "rollback": false,
                "type": { "type": "array", "items": "string" },
                "init": ["AD", "CN", "MCI", "Other"]
              },
              "validations": {
                "type": { "type": "array", "items": "Record" },
                "init": [
                  {
                    "code": "kfold",
                    "validationSpec": {
                      "code": "kfold",
                      "parameters": [{ "code": "k", "value": "2" }]
                    },
                    "node": "QA Node1 - Brescia FBF",
                    "data": {
                      "average": {
                        "Weighted precision": 0.33608018070405854,
                        "Weighted F1-score": 0.34581086878307343,
                        "Confusion matrix": {
                          "labels": ["AD", "CN", "Other", "MCI"],
                          "values": [
                            [109.0, 292.0, 0.0, 113.0],
                            [21.0, 1565.0, 0.0, 73.0],
                            [31.0, 819.0, 0.0, 56.0],
                            [52.0, 678.0, 2.0, 121.0]
                          ]
                        },
                        "Accuracy": 0.45651068158697866,
                        "type": "PolynomialClassificationScore",
                        "Weighted false positive rate": 0.35326126969451244,
                        "Weighted recall": 0.4565106815869786
                      },
                      "folds": {
                        "0": {
                          "Weighted precision": 0.2959010443573869,
                          "Weighted F1-score": 0.17901507136366235,
                          "Confusion matrix": {
                            "labels": ["AD", "CN", "Other", "MCI"],
                            "values": [
                              [50.0, 227.0, 0.0, 86.0],
                              [3.0, 395.0, 0.0, 21.0],
                              [0.0, 525.0, 0.0, 7.0],
                              [26.0, 551.0, 2.0, 73.0]
                            ]
                          },
                          "Accuracy": 0.2634791454730417,
                          "type": "PolynomialClassificationScore",
                          "Weighted false positive rate": 0.21199828739367843,
                          "Weighted recall": 0.2634791454730417
                        },
                        "1": {
                          "Weighted precision": 0.507319538640278,
                          "Weighted F1-score": 0.5674649154505351,
                          "Confusion matrix": {
                            "labels": ["AD", "CN", "Other", "MCI"],
                            "values": [
                              [59.0, 65.0, 0.0, 27.0],
                              [18.0, 1170.0, 0.0, 52.0],
                              [31.0, 294.0, 0.0, 49.0],
                              [26.0, 127.0, 0.0, 48.0]
                            ]
                          },
                          "Accuracy": 0.6495422177009156,
                          "type": "PolynomialClassificationScore",
                          "Weighted false positive rate": 0.43280726581273166,
                          "Weighted recall": 0.6495422177009156
                        }
                      },
                      "type": "KFoldCrossValidationScore"
                    }
                  },
                  {
                    "code": "remote-validation",
                    "validationSpec": {
                      "code": "remote-validation",
                      "parameters": [{ "code": "node", "value": "localhost" }]
                    },
                    "node": "localhost",
                    "data": {
                      "Weighted precision": 0.5852846713414526,
                      "Weighted F1-score": 0.1653460891902318,
                      "Confusion matrix": {
                        "labels": ["AD", "CN", "Other", "MCI"],
                        "values": [
                          [90.0, 270.0, 0.0, 99.0],
                          [5.0, 407.0, 0.0, 26.0],
                          [30.0, 797.0, 1.0, 42.0],
                          [45.0, 571.0, 0.0, 90.0]
                        ]
                      },
                      "Accuracy": 0.23776789324706835,
                      "type": "PolynomialClassificationScore",
                      "Weighted false positive rate": 0.17691431425913948,
                      "Weighted recall": 0.23776789324706835
                    }
                  }
                ]
              },
              "multinomialModel": {
                "shared": false,
                "@": "PrettyPFA line 17",
                "rollback": false,
                "type": { "type": "array", "items": "MultinomialDistribution" },
                "init": []
              },
              "gaussModel": {
                "shared": false,
                "@": "PrettyPFA line 16",
                "rollback": false,
                "type": { "type": "array", "items": "GaussianDistribution" },
                "init": [
                  {
                    "stats": [
                      { "mean": 2.6666311488, "variance": 0.1248131118 }
                    ]
                  },
                  {
                    "stats": [
                      { "mean": 3.1038250199, "variance": 0.1022050542 }
                    ]
                  },
                  {
                    "stats": [
                      { "mean": 2.9132142075, "variance": 0.1174085567 }
                    ]
                  },
                  {
                    "stats": [
                      { "mean": 2.7831279167, "variance": 0.1545422776 }
                    ]
                  }
                ]
              },
              "logPrior": {
                "shared": false,
                "@": "PrettyPFA line 19",
                "rollback": false,
                "type": { "type": "array", "items": "double" },
                "init": [
                  -2.0334958536,
                  -0.6365347247,
                  -1.2996339229,
                  -2.6975789012
                ]
              }
            },
            "method": "map",
            "name": "naive_bayes",
            "fcns": {
              "arr": {
                "params": [{ "x": "double" }],
                "ret": { "type": "array", "items": "double" },
                "do": [
                  {
                    "@": "PrettyPFA line 22",
                    "type": { "type": "array", "items": "double" },
                    "new": ["x"]
                  }
                ]
              },
              "C": {
                "params": [
                  { "x": "string" },
                  { "categories": { "type": "array", "items": "string" } }
                ],
                "ret": { "type": "array", "items": "double" },
                "do": [
                  {
                    "@": "PrettyPFA line 25",
                    "a.map": [
                      "categories",
                      {
                        "params": [{ "cat": "string" }],
                        "ret": "double",
                        "do": [
                          {
                            "@": "PrettyPFA line 25",
                            "if": {
                              "@": "PrettyPFA line 25",
                              "\u003d\u003d": ["cat", "x"]
                            },
                            "then": [1],
                            "else": [0]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "standardize": {
                "params": [
                  { "x": "double" },
                  { "mu": "double" },
                  { "sigma": "double" }
                ],
                "ret": "double",
                "do": [
                  {
                    "@": "PrettyPFA line 28",
                    "/": [
                      { "@": "PrettyPFA line 28", "-": ["x", "mu"] },
                      "sigma"
                    ]
                  }
                ]
              }
            },
            "@": "PrettyPFA document",
            "metadata": {
              "estimator": "{\"py/object\": \"sklearn_to_pfa.mixed_nb.MixedNB\", \"py/state\": {\"gauss_nb\": {\"py/object\": \"sklearn.naive_bayes.GaussianNB\", \"py/state\": {\"_sklearn_version\": \"0.19.1\", \"class_count_\": {\"py/object\": \"numpy.ndarray\", \"dtype\": \"float64\", \"values\": [373.0, 1508.0, 777.0, 192.0]}, \"class_prior_\": {\"py/object\": \"numpy.ndarray\", \"dtype\": \"float64\", \"values\": [0.13087719298245615, 0.5291228070175439, 0.27263157894736845, 0.06736842105263158]}, \"classes_\": {\"py/object\": \"numpy.ndarray\", \"dtype\": \"\u003cU5\", \"values\": [\"AD\", \"CN\", \"MCI\", \"Other\"]}, \"priors\": null, \"sigma_\": {\"py/object\": \"numpy.ndarray\", \"dtype\": \"float64\", \"values\": [[0.12481311177045532], [0.10220505416103431], [0.11740855672475192], [0.15454227761657144]]}, \"theta_\": {\"py/object\": \"numpy.ndarray\", \"dtype\": \"float64\", \"values\": [[2.6666311487935657], [3.103825019893899], [2.9132142074646077], [2.783127916666667]]}}}, \"is_nominal\": [false], \"multi_nb\": {\"py/object\": \"sklearn.naive_bayes.MultinomialNB\", \"py/state\": {\"_sklearn_version\": \"0.19.1\", \"alpha\": 1, \"class_prior\": null, \"fit_prior\": true}}}}",
              "score": "0.58",
              "X": "{\"lefthippocampus\":{\"count\":2850.0,\"mean\":2.973034929,\"std\":0.3709806886,\"min\":0.58376,\"25%\":2.73785,\"50%\":2.98675,\"75%\":3.216823225,\"max\":4.0687}}",
              "y": "{\"count\":2850,\"unique\":4,\"top\":\"CN\",\"freq\":1508}"
            },
            "output": "string",
            "action": [
              {
                "@": "PrettyPFA lines 30-31",
                "let": {
                  "x": {
                    "@": "PrettyPFA lines 30-31",
                    "a.flatten": [
                      {
                        "@": "PrettyPFA lines 30-31",
                        "type": {
                          "type": "array",
                          "items": { "type": "array", "items": "double" }
                        },
                        "new": [
                          {
                            "@": "PrettyPFA line 31",
                            "u.arr": [
                              {
                                "@": "PrettyPFA line 31",
                                "cast.double": [
                                  {
                                    "@": "PrettyPFA line 31",
                                    "attr": "input",
                                    "path": [
                                      {
                                        "@": "PrettyPFA line 31",
                                        "string": "lefthippocampus"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "@": "PrettyPFA line 34",
                "let": {
                  "gaussFeatures": {
                    "@": "PrettyPFA line 34",
                    "if": {
                      "@": "PrettyPFA line 34",
                      "\u003e": [
                        {
                          "@": "PrettyPFA line 34",
                          "a.len": [
                            { "@": "PrettyPFA line 34", "cell": "gaussModel" }
                          ]
                        },
                        0
                      ]
                    },
                    "then": [
                      {
                        "@": "PrettyPFA line 34",
                        "a.len": [
                          {
                            "@": "PrettyPFA line 34",
                            "cell": "gaussModel",
                            "path": [
                              0,
                              { "@": "PrettyPFA line 34", "string": "stats" }
                            ]
                          }
                        ]
                      }
                    ],
                    "else": [0]
                  }
                }
              },
              {
                "@": "PrettyPFA lines 36-38",
                "let": {
                  "gaussianLL": {
                    "@": "PrettyPFA lines 36-38",
                    "a.map": [
                      { "@": "PrettyPFA line 36", "cell": "gaussModel" },
                      {
                        "params": [
                          {
                            "dist": {
                              "type": "record",
                              "name": "GaussianDistribution",
                              "fields": [
                                {
                                  "name": "stats",
                                  "type": {
                                    "type": "array",
                                    "items": {
                                      "type": "record",
                                      "name": "M",
                                      "fields": [
                                        { "name": "mean", "type": "double" },
                                        { "name": "variance", "type": "double" }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "ret": "double",
                        "do": [
                          {
                            "@": "PrettyPFA line 37",
                            "model.naive.gaussian": [
                              {
                                "@": "PrettyPFA line 37",
                                "a.subseq": ["x", 0, "gaussFeatures"]
                              },
                              {
                                "@": "PrettyPFA line 37",
                                "attr": "dist",
                                "path": [
                                  {
                                    "@": "PrettyPFA line 37",
                                    "string": "stats"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "@": "PrettyPFA lines 40-42",
                "let": {
                  "multinomialLL": {
                    "@": "PrettyPFA lines 40-42",
                    "a.map": [
                      { "@": "PrettyPFA line 40", "cell": "multinomialModel" },
                      {
                        "params": [
                          {
                            "dist": {
                              "type": "record",
                              "name": "MultinomialDistribution",
                              "fields": [
                                {
                                  "name": "logLikelihoods",
                                  "type": { "type": "array", "items": "double" }
                                }
                              ]
                            }
                          }
                        ],
                        "ret": "double",
                        "do": [
                          {
                            "@": "PrettyPFA line 41",
                            "model.naive.multinomial": [
                              {
                                "@": "PrettyPFA line 41",
                                "a.subseq": [
                                  "x",
                                  "gaussFeatures",
                                  { "@": "PrettyPFA line 41", "a.len": ["x"] }
                                ]
                              },
                              {
                                "@": "PrettyPFA line 41",
                                "attr": "dist",
                                "path": [
                                  {
                                    "@": "PrettyPFA line 41",
                                    "string": "logLikelihoods"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "@": "PrettyPFA line 44",
                "let": {
                  "classLL": { "@": "PrettyPFA line 44", "cell": "logPrior" }
                }
              },
              {
                "@": "PrettyPFA lines 45-46",
                "if": {
                  "@": "PrettyPFA line 45",
                  "\u003e": [
                    { "@": "PrettyPFA line 45", "a.len": ["gaussianLL"] },
                    0
                  ]
                },
                "then": [
                  {
                    "@": "PrettyPFA line 46",
                    "set": {
                      "classLL": {
                        "@": "PrettyPFA line 46",
                        "la.add": ["classLL", "gaussianLL"]
                      }
                    }
                  }
                ]
              },
              {
                "@": "PrettyPFA lines 47-48",
                "if": {
                  "@": "PrettyPFA line 47",
                  "\u003e": [
                    { "@": "PrettyPFA line 47", "a.len": ["multinomialLL"] },
                    0
                  ]
                },
                "then": [
                  {
                    "@": "PrettyPFA line 48",
                    "set": {
                      "classLL": {
                        "@": "PrettyPFA line 48",
                        "la.add": ["classLL", "multinomialLL"]
                      }
                    }
                  }
                ]
              },
              {
                "@": "PrettyPFA line 50",
                "let": {
                  "norm": {
                    "@": "PrettyPFA line 50",
                    "a.logsumexp": ["classLL"]
                  }
                }
              },
              {
                "@": "PrettyPFA line 51",
                "let": {
                  "probs": {
                    "@": "PrettyPFA line 51",
                    "a.map": [
                      "classLL",
                      {
                        "params": [{ "x": "double" }],
                        "ret": "double",
                        "do": [
                          {
                            "@": "PrettyPFA line 51",
                            "m.exp": [
                              { "@": "PrettyPFA line 51", "-": ["x", "norm"] }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              {
                "@": "PrettyPFA line 52",
                "cell": "classes",
                "path": [{ "@": "PrettyPFA line 52", "a.argmax": ["probs"] }]
              }
            ],
            "input": {
              "type": "record",
              "name": "Input",
              "fields": [{ "name": "lefthippocampus", "type": "double" }]
            }
          },
          "algorithmSpec": {
            "code": "naiveBayes",
            "parameters": [
              { "code": "alpha", "value": "1" },
              { "code": "class_prior", "value": "" }
            ],
            "step": {
              "name": "scatter",
              "execution": "map",
              "input": { "selectionType": "training", "type": "SelectDataset" },
              "operation": { "compute": "compute" }
            }
          },
          "algorithm": "python-sgd-naive-bayes",
          "jobId": "6b9ae9c5-d3e5-4bcb-8f2c-b4674eca8e29",
          "node": "QA Node1 - Brescia FBF",
          "type": "application/pfa+json"
        }
      ],
      "query": {
        "covariables": [{ "code": "lefthippocampus" }],
        "algorithms": [
          {
            "code": "naiveBayes",
            "parameters": [
              { "code": "alpha", "value": "1" },
              { "code": "class_prior", "value": "" }
            ],
            "step": {
              "name": "scatter",
              "execution": "map",
              "input": { "selectionType": "training", "type": "SelectDataset" },
              "operation": { "compute": "compute" }
            }
          }
        ],
        "testingDatasets": [],
        "validations": [
          { "code": "kfold", "parameters": [{ "code": "k", "value": "2" }] }
        ],
        "grouping": [],
        "variables": [{ "code": "alzheimerbroadcategory" }],
        "validationDatasets": [
          { "code": "edsd" },
          { "code": "ppmi" },
          { "code": "chru_lille" }
        ],
        "trainingDatasets": [
          { "code": "clm" },
          { "code": "adni" },
          { "code": "fbf" }
        ],
        "targetTable": "mip_local_features",
        "user": { "code": "manu" }
      },
      "jobId": "b117d2c5-3cd2-43b4-aee8-ea03a8b903d3",
      "node": "QA Node1 - Brescia FBF",
      "type": "application/vnd.hbp.mip.experiment.pfa+json"
    }
  ]
}
