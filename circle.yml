version: 2
jobs:
  build:
    docker:
      - image: hbpmip/docker-compose-for-ci:17.06-1
    steps:
      - setup_remote_docker:
          version: 17.06.0-ce
      - checkout
      - run:
          name: "Install requirements"
          command: |
            docker --version
      - run:
          name: "Build the project"
          command: |
            docker build -t hbpmip/portal-frontend .
      - run:
          name: "Additional task"
          command: |
            echo "A first hello"

#    notify:
#      webhooks:
#      - url: 'https://webhook.atomist.com/atomist/circle'

  tests:
    docker:
      -image: hbpmip/docker-compose-for-ci:17.06-1
#      -image: zookeeper:3.4.11
#        environment:
#          ZOO_MY_ID: 1
#          ZOO_SERVERS: server.1=zookeeper:2888:3888
#      -image: mesosphere/mesos-master:1.3.0
#        environment:
#          MESOS_PORT: 5050
#          MESOS_ZK: 'zk://zookeeper:2181/mesos'
#          MESOS_QUORUM: '1'
#          MESOS_REGISTRY: 'in_memory'
#          MESOS_CLUSTER: 'local'
#          MESOS_HOSTNAME: 'mesosmaster.docker'
#          MESOS_LOG_DIR: '/var/log/mesos/master'
#          MESOS_WORK_DIR: '/var/lib/mesos'
#      -image: mesosphere/mesos-slave:1.3.0
#        environment:
#          MESOS_MASTER: 'zk://zookeeper:2181/mesos'
#          MESOS_PORT: '5051'
#          MESOS_LOG_DIR: '/var/log/mesos/slave'
#          MESOS_WORK_DIR: '/var/tmp/mesos'
#          MESOS_CONTAINERIZERS: 'docker,mesos'
#          MESOS_EXECUTOR_REGISTRATION_TIMEOUT: '5mins'
#          MESOS_EXECUTOR_SHUTDOWN_GRACE_PERIOD: '90secs'
#          MESOS_DOCKER_STOP_TIMEOUT: '60secs'
#          # If your workstation doesn't have a resolvable hostname/FQDN then $MESOS_HOSTNAME needs to be set to its IP-address
#          MESOS_HOSTNAME: 'mesosslave.docker'
#          MESOS_SWITCH_USER: 0
#          # see bug resolution for "Failed to determine the hierarchy where the subsystem freezer is attached" at https://github.com/eBayClassifiedsGroup/PanteraS/issues/142
#          MESOS_LAUNCHER: "posix"
#      -image: mesosphere/chronos:v3.0.2
#        environment:
#          PORT0: 4400
#          PORT1: 4401
#      -image: postgres:9.6.5-alpine
#        environment:
#          POSTGRES_PASSWORD: test
#      -image: "hbpmip/create-databases:1.0.0"
#        environment:
#          DB_HOST: db
#          DB_PORT: 5432
#          DB_ADMIN_USER: postgres
#          DB_ADMIN_PASSWORD: test
#          DB1: meta
#          USER1: meta
#          PASSWORD1: metapwd
#          DB2: features
#          USER2: features
#          PASSWORD2: featurespwd
#          DB3: woken
#          USER3: woken
#          PASSWORD3: wokenpwd
#          DB4: portal
#          USER4: portal
#          PASSWORD4: portalpwd
#      -image: "hbpmip/sample-meta-db-setup:0.4.1"
#        environment:
#          FLYWAY_HOST: db
#          FLYWAY_PORT: 5432
#          FLYWAY_DATABASE_NAME: meta
#          FLYWAY_USER: postgres
#          FLYWAY_PASSWORD: test
#      -image: "hbpmip/sample-data-db-setup:0.5.0"
#        environment:
#          FLYWAY_HOST: db
#          FLYWAY_PORT: 5432
#          FLYWAY_DATABASE_NAME: features
#          FLYWAY_USER: postgres
#          FLYWAY_PASSWORD: test
#      -image: "hbpmip/woken-db-setup:1.0.2"
#        environment:
#          FLYWAY_HOST: db
#          FLYWAY_PORT: 5432
#          FLYWAY_DATABASE_NAME: woken
#          FLYWAY_USER: postgres
#          FLYWAY_PASSWORD: test
#      -image: hbpmip/woken:2.3.1
#        environment:
#          CLUSTER_PORT: 8088
#          CLUSTER_IP: woken
#          WOKEN_PORT_8088_TCP_ADDR: woken
#      -image: hbpmip/woken-validation:2.2.6
#        environment:
#          CLUSTER_PORT: 8082
#          CLUSTER_IP: wokenvalidation
#          WOKEN_PORT_8088_TCP_ADDR: woken
#          LOG_LEVEL: DEBUG
#      -image: "hbpmip/portal-backend:2.6.1"
#        environment:
#          PORTAL_DB_URL: jdbc:postgresql://db:5432/portal
#          PORTAL_DB_SERVER: db:5432
#          PORTAL_DB_USER: portal
#          PORTAL_DB_PASSWORD: portalpwd
#          META_DB_URL: jdbc:postgresql://db:5432/meta
#          META_DB_SERVER: db:5432
#          META_DB_USER: meta
#          META_DB_PASSWORD: metapwd
#          FEATURES_DB_URL: jdbc:postgresql://db:5432/features
#          FEATURES_DB_SERVER: db:5432
#          FEATURES_DB_USER: features
#          FEATURES_DB_PASSWORD: featurespwd
#          FEATURES_DB_MAIN_TABLE: cde_features_a
#          CONTEXT_PATH: /services
#          AUTHENTICATION: 0
#          FRONTEND_LOGIN_URL: ${FRONTEND_URL}/services/login/hbp
#          FRONTEND_AFTER_LOGIN_URL: ${FRONTEND_URL}/home
#          FRONTEND_AFTER_LOGOUT_URL: ${FRONTEND_URL}/services/login/hbp
#          CLUSTER_IP: backend
#          CLUSTER_PORT: 8089
#          WOKEN_HOST: woken
#          WOKEN_PORT: 8088
#          WOKEN_PORT_8088_TCP_ADDR: woken
#          WOKEN_AKKA_PATH: "/user/entrypoint"
#          EXAREME_URL: http://prozac.madgik.di.uoa.gr:9090/mining/query
#          LOGGING_LEVEL_WEB: DEBUG
#          LOGGING_LEVEL_HIBERNATE: WARN
#          SESSION_TIMEOUT: 2592000
#          VIRTUAL_HOST: backend
#          VIRTUAL_PORT: 8080
#          DATASETS: chuv,brescia,lille
    steps:
      - setup_remote_docker:
        version: 17.06.0-ce
      - checkout
      - run:
        name: "Install requirements"
        command: |
          docker --version
      - run:
        name: "Some task in test job"
        command: |
          echo "A second hello"

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - tests
