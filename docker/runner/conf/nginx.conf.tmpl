#
# NGinx configuration template for Docker
#
# General configuration tips for Nginx:
#  * https://www.linode.com/docs/websites/nginx/how-to-configure-nginx
# Interesting sources of configuration:
#  * https://github.com/jwilder/nginx-proxy/blob/master/nginx.tmpl
#

user  nginx nginx;
worker_processes  {{ default .Env.WORKER_PROCESSES "1" }};
worker_rlimit_nofile 1024;

error_log  /var/log/nginx/error.log {{ default .Env.ERROR_LOG_LEVEL "warn" }};
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    use epoll;
    multi_accept on;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
    log_format  main  '$http_x_forwarded_for - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent"';

  access_log /var/log/nginx/access.log  main;

  # zero-copy when serving files
  sendfile on;
  # limit network overhead, accelerate sending of files
  tcp_nopush on;
  # remove 200ms delay on TCP send
  tcp_nodelay on;
  keepalive_timeout  300;
  # don't send the nginx version number in error pages and Server header
  server_tokens off;
  # CPU dependent optimisations. See http://nginx.org/en/docs/hash.html
  # types_hash_max_size 2048;
  # server_names_hash_bucket_size 64;
  # server_name_in_redirect off;
  underscores_in_headers on;

  # Common configuration for SSL
  # disable SSLv3(enabled by default since nginx 0.8.19) since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers   ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;
  # enables server-side protection from BEAST attacks
  # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
  ssl_prefer_server_ciphers "on";
  # enable session resumption to improve https performance
  # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
  ssl_session_cache "shared:SSL:50m";
  ssl_session_timeout "10m";
  ssl_buffer_size 1400;
  ssl_session_tickets "off";

  include /etc/nginx/conf.d/*.conf;

  server {
    listen {{ default .Env.PORTAL_PORT "80" }};
    listen [::]:{{ default .Env.PORTAL_PORT "80" }};
    server_name {{ default .Env.PORTAL_VIRTUAL_HOST "frontend" }};

    root /usr/share/nginx/html;
    location / {
      index index.html;
      error_page 404 401 /index.html;
    }

    # DEVELOPMENT (use dev frontend behind the proxy)
    #location / {
    #  proxy_set_header X-Forwarded-Host $host:$server_port;
    #  proxy_set_header X-Forwarded-Server $host;
    #  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #  proxy_pass http://155.105.196.49:3000;
    #}

    location /protected/ {
      internal;
      alias /protected/;
    }

    {{ if .Env.GALAXY_URL }}
      location /nativeGalaxy  {
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass {{.Env.GALAXY_URL}};
      }
    {{ end }}

    {{ if .Env.KEYCLOAK_AUTH_URL }}
      location /auth/ {
        proxy_pass {{.Env.KEYCLOAK_AUTH_URL}};
        proxy_set_header    Host               $host;
        proxy_set_header    X-Real-IP          $remote_addr;
        proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Host   $host;
        proxy_set_header    X-Forwarded-Server $host;
        proxy_set_header    X-Forwarded-Port   $server_port;
        proxy_set_header    X-Forwarded-Proto  $scheme;
      }

      location /keycloak/auth/ {
        proxy_pass {{.Env.KEYCLOAK_AUTH_URL}};
        proxy_set_header    Host               $host;
        proxy_set_header    X-Real-IP          $remote_addr;
        proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Host   $host;
        proxy_set_header    X-Forwarded-Server $host;
        proxy_set_header    X-Forwarded-Port   $server_port;
        proxy_set_header    X-Forwarded-Proto  $scheme;
      }

      location /keycloaklogin/ {
        proxy_set_header    Host               $host;
        proxy_set_header    X-Real-IP          $remote_addr;
        proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Host   $host;
        proxy_set_header    X-Forwarded-Server $host;
        proxy_set_header    X-Forwarded-Port   $server_port;
        proxy_set_header    X-Forwarded-Proto  $scheme;
        proxy_pass {{.Env.KEYCLOAK_LOGIN_URL}}; 
      }
    {{ end }}

    # keycloak redirect on /services/ after login. In that case, redirect to /
    location = /services/ {
    resolver 8.8.8.8;
    return 301 $scheme://$http_host/;
    }

    {{ if .Env.PORTAL_BACKEND_SERVER }}
      location /services {
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header    X-Real-IP          $remote_addr;
        proxy_set_header    X-Forwarded-Host   $host;
        proxy_set_header    X-Forwarded-Server $host:$server_port;
        proxy_set_header    X-Forwarded-Port   $server_port;
        proxy_pass http://portal-backend/{{ default .Env.PORTAL_BACKEND_CONTEXT "services" }};
        proxy_intercept_errors on;
        error_page 401 /index.html;
      }
    {{ end }}
  }
}
